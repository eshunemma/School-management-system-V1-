extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.0"
    import: ["@key", "@shareable"]
  )

type Query {
  listAllUsers: [User]
  listAllStaffs: [Staff]
  listAllClasses: [Class_table]
  listAllDepartment: [Departments]
}

type Mutation {
  signUp(data: UserInput): AuthPayload
  signIn(data: UserInput): AuthPayload

  # StudentInfo Resolver
  addStudent(data: StudentInfo_Input): StudentInfo

  # Staff Resolver
  addStaff(data: staffInput): Staff

  # Class
  addClass(data: classInput): Class_table

  # departments
  addDepartment(data: departmentInput): Departments

  # Exam
  addExamType(data: ExamTypeInput): ExamType
  addExam(data: ExamInput): Exam
  addExamResult(data: ExamResultInput): ExamResult
}

type User {
  id: ID
  name: String
  email: String
  password: String
  userName: String
  role: String
  createdAt: String
  createdBy: Int
  updatedAt: String
  updateBy: Int
}

type AuthPayload {
  message: String
  token: String
}

input UserInput {
  id: ID
  name: String
  email: String
  password: String
  userName: String
  role: String
  CreatedBy: Int
  updatedAt: String
  updateBy: Int
}

# STUDENT INFO TYPES AND INPUT
type StudentInfo {
  id: ID
  studentId: String
  studentName: String
  dateOfBirth: String
  nationality: String
  gender: String
  hometown: String
  destination: String
  digitalAddress: String
  motherTongue: String
  secondLanguage: String
  religion: String
  admissionDate: String
  admissionNumber: String
  classOnAdmission: String
  previous_school: String
  previousSchoolLocation: String
  classInPreviousSchool: String
  studentImage: String
  createdAt: String
  createdBy: Int
  updatedAt: String
  updatedBy: Int
  FamilyInfo: [FamilyInfo]
  EmergencyContact: EmergencyContact
}

type FamilyInfo {
  id: ID
  student_id: String
  parent_name: String
  occupation: String
  place_of_work: String
  parent_destination: String
  hometown: String
  telephone_number: String
  whatsapp_number: String
  email: String
  relation: String
  student: StudentInfo
}

type EmergencyContact {
  id: ID
  studentId: String
  contactName: String
  relation: String
  telephone: String
  student: StudentInfo
}

type Staff {
  id: ID
  staffId: String
  staffName: String
  DOB: String
  destination: String
  phoneNumber: String
  email: String
  nationalId: String
  snnitId: String
  dateJoined: String
  active: Boolean
  createdAt: String
  updatedAt: String
}

type Class_table {
  id: ID
  class_name: String
  department_id: Int
  staff_id: String
  departments: [Departments]
  staff: [Staff]
  students: [Student_class]
}

type Departments {
  id: ID
  name: String
  class: [Class_table]
  Subject: [Subject]
}

type Student_class {
  student_id: Int
  class_id: Int
}

type Subject {
  id: ID
  name: String
  description: String
  department_id: [Departments]
}

type ExamType {
  id: ID
  name: String
  description: String
  exam: [Exam]
}

type Exam {
  id: ID
  exam_type_id: String
  name: String
  start_date: String
  end_date: String
  exam_result: [ExamResult]
}

type ExamResult {
  id: ID
  exam_id: Int
  student_id: Int
  subject_id: Int
  marks: Int
}

input StudentInfo_Input {
  studentId: String
  studentName: String
  dateOfBirth: String
  nationality: String
  gender: String
  hometown: String
  destination: String
  digitalAddress: String
  motherTongue: String
  secondLanguage: String
  religion: String
  admissionDate: String
  admissionNumber: String
  classOnAdmission: String
  previous_school: String
  previousSchoolLocation: String
  classInPreviousSchool: String
  studentImage: String
  createdAt: String
  createdBy: Int
  updatedAt: String
  updatedBy: Int
  contactName: String
  relation: String
  telephone: String
  Family_info: [FamilyInfoInput]
}

input FamilyInfoInput {
  student_id: String
  parent_name: String
  occupation: String
  place_of_work: String
  parent_destination: String
  hometown: String
  telephone_number: String
  whatsapp_number: String
  email: String
  relation: String
}

input EmergencyContactInput {
  studentId: String
  contactName: String
  relation: String
  telephone: String
}

input staffInput {
  staffId: String
  staffName: String
  DOB: String
  destination: String
  phoneNumber: String
  email: String
  nationalId: String
  snnitId: String
  dateJoined: String
  active: Boolean
  createdAt: String
  updatedAt: String
}

input classInput {
  class_name: String
  department_id: Int
  staff_id: String
}

input departmentInput {
  id: ID
  name: String
}

input ExamTypeInput {
  name: String
  description: String
}

input ExamInput {
  exam_type_id: String
  name: String
  start_date: String
  end_date: String
}

input ExamResultInput {
  exam_id: Int
  student_id: Int
  subject_id: Int
  marks: Int
}
